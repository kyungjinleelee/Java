[ch1, 2 변수]
* 이클립스 단축키
ctrl + shift + L 단축키 전체 목록 보기 
ctrl + +,-   폰트 크기 증가/감소
ctrl + D	     한 줄 삭제
ctrl + alt + down 행단위 복사 
alt + shift + A  멀티컬럼 편집
alt + up, down 행단위 이동
ctrl + i 자동 들여쓰기
ctrl + /   주석 설정, 해제
ctrl + space 자동 완성
.을 눌러도 자동 완성 기능이 뜸

* 소스코드 export 하기 
package explorer 빈공간 우클릭 > export > general > Archive file , next > export 할 파일 선택 > save in zip format 선택 > browse 클릭해서 내보내고 저장할 경로 설정 

* 변수란?
- 단 하나의 값을 저장할 수 있는 메모리 공간

* 변수의 선언 
- 선언 이유 : 값을 저장할 공간을 마련하기 위해
- 선언 방법 : 변수타입 변수이름; ex) int age;
- 값 저장 : 
int age;  // int 타입의 변수 age 선언
age = 25;  // 변수 age에 25 저장 
int age = 25; // 위 두 줄을 한줄로 
- 변수의 초기화 : 변수에 처음으로 값을 저장 
 *주의 : 지역 변수는 읽기 전에 꼭 초기화! ! ! 

* 변수, 상수, 리터럴 
- 변수 (variable) : 하나의 값을 저장하기 위한 공간 
- 상수 (constant) : 한 번만 값을 저장 가능한 변수

int score = 100;
    score = 200; 
final int MAX = 100; // MAX는 상수 (한 번 저장하고 나면 그 값을 바꿀 수 없음)
	   MAX = 200; // error 

- 리터럴 (literal) : 그 자체로 값을 의미하는 것 ( 위 코드들 중의 100, 200, 100, 200을 리터럴이라 함)
- 리터럴의 종류, 접미사 
 논리형 : false, true
 정수형 : 123, 077, 0b0101, 100L / L (long타입)
 실수형 : 3.14, 3.0e8, 1.4f, 0x1  / f, d (float, double) (d는 생략 허용)
 문자형 : 'A', '1', '\n' 
 문자열: "abc", "123", "A", "true"

char ch = 'a';
String str = "abc";
 참고) 값이 출력될 떄 접미사는 출력되지 않음.

- 변수와 리터럴의 타입 불일치
1) 범위가 '변수 > 리터럴' 인 경우 OK 
	int i = 'A';  // int > char, 이 경우 A의 문자코드인 65가 i에 저장됨 
2) 범위가 '변수 < 리터럴' 인 경우 error 
	long l = 3.14f;  // long < float ( 8byte < 4byte)
	float f = 3.14;	// float < double (3.14에서 d는 생략됨) 
